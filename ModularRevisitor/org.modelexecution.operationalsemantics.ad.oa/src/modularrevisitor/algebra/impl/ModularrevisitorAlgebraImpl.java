package modularrevisitor.algebra.impl;

public interface ModularrevisitorAlgebraImpl extends modularrevisitor.algebra.ModularrevisitorAlgebra
	<admodular.modularrevisitor.algebra.operation.AdmodularModularrevisitorActionOperation,modularrevisitor.modularrevisitor.algebra.operation.ModularrevisitorModularrevisitorAction_AspectOperation,admodular.modularrevisitor.algebra.operation.AdmodularModularrevisitorActivityOperation,admodular.modularrevisitor.algebra.operation.AdmodularModularrevisitorActivityEdgeOperation,modularrevisitor.modularrevisitor.algebra.operation.ModularrevisitorModularrevisitorActivityEdge_AspectOperation,admodular.modularrevisitor.algebra.operation.AdmodularModularrevisitorActivityFinalNodeOperation,modularrevisitor.modularrevisitor.algebra.operation.ModularrevisitorModularrevisitorActivityFinalNode_AspectOperation,admodular.modularrevisitor.algebra.operation.AdmodularModularrevisitorActivityNodeOperation,modularrevisitor.modularrevisitor.algebra.operation.ModularrevisitorModularrevisitorActivityNode_AspectOperation,modularrevisitor.modularrevisitor.algebra.operation.ModularrevisitorModularrevisitorActivity_AspectOperation,admodular.modularrevisitor.algebra.operation.AdmodularModularrevisitorBooleanBinaryExpressionOperation,modularrevisitor.modularrevisitor.algebra.operation.ModularrevisitorModularrevisitorBooleanBinaryExpression_AspectOperation,admodular.modularrevisitor.algebra.operation.AdmodularModularrevisitorBooleanExpressionOperation,modularrevisitor.modularrevisitor.algebra.operation.ModularrevisitorModularrevisitorBooleanExpression_AspectOperation,admodular.modularrevisitor.algebra.operation.AdmodularModularrevisitorBooleanUnaryExpressionOperation,modularrevisitor.modularrevisitor.algebra.operation.ModularrevisitorModularrevisitorBooleanUnaryExpression_AspectOperation,admodular.modularrevisitor.algebra.operation.AdmodularModularrevisitorBooleanValueOperation,modularrevisitor.modularrevisitor.algebra.operation.ModularrevisitorModularrevisitorBooleanValue_AspectOperation,admodular.modularrevisitor.algebra.operation.AdmodularModularrevisitorBooleanVariableOperation,modularrevisitor.modularrevisitor.algebra.operation.ModularrevisitorModularrevisitorBooleanVariable_AspectOperation,admodular.modularrevisitor.algebra.operation.AdmodularModularrevisitorControlFlowOperation,modularrevisitor.modularrevisitor.algebra.operation.ModularrevisitorModularrevisitorControlFlow_AspectOperation,admodular.modularrevisitor.algebra.operation.AdmodularModularrevisitorControlNodeOperation,modularrevisitor.modularrevisitor.algebra.operation.ModularrevisitorModularrevisitorControlNode_AspectOperation,modularrevisitor.modularrevisitor.algebra.operation.ModularrevisitorModularrevisitorControlTokenOperation,admodular.modularrevisitor.algebra.operation.AdmodularModularrevisitorDecisionNodeOperation,modularrevisitor.modularrevisitor.algebra.operation.ModularrevisitorModularrevisitorDecisionNode_AspectOperation,admodular.modularrevisitor.algebra.operation.AdmodularModularrevisitorExecutableNodeOperation,modularrevisitor.modularrevisitor.algebra.operation.ModularrevisitorModularrevisitorExecutableNode_AspectOperation,admodular.modularrevisitor.algebra.operation.AdmodularModularrevisitorExpressionOperation,admodular.modularrevisitor.algebra.operation.AdmodularModularrevisitorFinalNodeOperation,modularrevisitor.modularrevisitor.algebra.operation.ModularrevisitorModularrevisitorFinalNode_AspectOperation,admodular.modularrevisitor.algebra.operation.AdmodularModularrevisitorForkNodeOperation,modularrevisitor.modularrevisitor.algebra.operation.ModularrevisitorModularrevisitorForkNode_AspectOperation,modularrevisitor.modularrevisitor.algebra.operation.ModularrevisitorModularrevisitorForkedTokenOperation,admodular.modularrevisitor.algebra.operation.AdmodularModularrevisitorInitialNodeOperation,modularrevisitor.modularrevisitor.algebra.operation.ModularrevisitorModularrevisitorInitialNode_AspectOperation,modularrevisitor.modularrevisitor.algebra.operation.ModularrevisitorModularrevisitorInputOperation,modularrevisitor.modularrevisitor.algebra.operation.ModularrevisitorModularrevisitorInputValueOperation,admodular.modularrevisitor.algebra.operation.AdmodularModularrevisitorIntegerCalculationExpressionOperation,modularrevisitor.modularrevisitor.algebra.operation.ModularrevisitorModularrevisitorIntegerCalculationExpression_AspectOperation,admodular.modularrevisitor.algebra.operation.AdmodularModularrevisitorIntegerComparisonExpressionOperation,modularrevisitor.modularrevisitor.algebra.operation.ModularrevisitorModularrevisitorIntegerComparisonExpression_AspectOperation,admodular.modularrevisitor.algebra.operation.AdmodularModularrevisitorIntegerExpressionOperation,modularrevisitor.modularrevisitor.algebra.operation.ModularrevisitorModularrevisitorIntegerExpression_AspectOperation,admodular.modularrevisitor.algebra.operation.AdmodularModularrevisitorIntegerValueOperation,modularrevisitor.modularrevisitor.algebra.operation.ModularrevisitorModularrevisitorIntegerValue_AspectOperation,admodular.modularrevisitor.algebra.operation.AdmodularModularrevisitorIntegerVariableOperation,modularrevisitor.modularrevisitor.algebra.operation.ModularrevisitorModularrevisitorIntegerVariable_AspectOperation,admodular.modularrevisitor.algebra.operation.AdmodularModularrevisitorJoinNodeOperation,modularrevisitor.modularrevisitor.algebra.operation.ModularrevisitorModularrevisitorJoinNode_AspectOperation,admodular.modularrevisitor.algebra.operation.AdmodularModularrevisitorMergeNodeOperation,modularrevisitor.modularrevisitor.algebra.operation.ModularrevisitorModularrevisitorMergeNode_AspectOperation,admodular.$default.algebra.operation.Admodular$defaultNamedElementOperation,modularrevisitor.modularrevisitor.algebra.operation.ModularrevisitorModularrevisitorOfferOperation,admodular.modularrevisitor.algebra.operation.AdmodularModularrevisitorOpaqueActionOperation,modularrevisitor.modularrevisitor.algebra.operation.ModularrevisitorModularrevisitorOpaqueAction_AspectOperation,modularrevisitor.modularrevisitor.algebra.operation.ModularrevisitorModularrevisitorTokenOperation,modularrevisitor.modularrevisitor.algebra.operation.ModularrevisitorModularrevisitorTraceOperation,admodular.modularrevisitor.algebra.operation.AdmodularModularrevisitorValueOperation,admodular.modularrevisitor.algebra.operation.AdmodularModularrevisitorVariableOperation,modularrevisitor.modularrevisitor.algebra.operation.ModularrevisitorModularrevisitorVariable_AspectOperation> {
	@Override
	default modularrevisitor.modularrevisitor.algebra.operation.ModularrevisitorModularrevisitorAction_AspectOperation action_Aspect(final modularrevisitor.Action_Aspect action_Aspect) {
		return new modularrevisitor.modularrevisitor.algebra.impl.operation.ModularrevisitorModularrevisitorAction_AspectOperationImpl(action_Aspect, this);
	} 
	@Override
	default modularrevisitor.modularrevisitor.algebra.operation.ModularrevisitorModularrevisitorAction_AspectOperation namedElement_action_Aspect(final modularrevisitor.Action_Aspect action_Aspect) {
		return new modularrevisitor.modularrevisitor.algebra.impl.operation.ModularrevisitorModularrevisitorAction_AspectOperationImpl(action_Aspect, this);
	} 
	@Override
	default modularrevisitor.modularrevisitor.algebra.operation.ModularrevisitorModularrevisitorAction_AspectOperation action_action_Aspect(final modularrevisitor.Action_Aspect action_Aspect) {
		return new modularrevisitor.modularrevisitor.algebra.impl.operation.ModularrevisitorModularrevisitorAction_AspectOperationImpl(action_Aspect, this);
	} 
	@Override
	default modularrevisitor.modularrevisitor.algebra.operation.ModularrevisitorModularrevisitorAction_AspectOperation activityNode_Aspect_action_Aspect(final modularrevisitor.Action_Aspect action_Aspect) {
		return new modularrevisitor.modularrevisitor.algebra.impl.operation.ModularrevisitorModularrevisitorAction_AspectOperationImpl(action_Aspect, this);
	} 
	@Override
	default modularrevisitor.modularrevisitor.algebra.operation.ModularrevisitorModularrevisitorAction_AspectOperation activityNode_action_Aspect(final modularrevisitor.Action_Aspect action_Aspect) {
		return new modularrevisitor.modularrevisitor.algebra.impl.operation.ModularrevisitorModularrevisitorAction_AspectOperationImpl(action_Aspect, this);
	} 
	@Override
	default modularrevisitor.modularrevisitor.algebra.operation.ModularrevisitorModularrevisitorAction_AspectOperation executableNode_Aspect_action_Aspect(final modularrevisitor.Action_Aspect action_Aspect) {
		return new modularrevisitor.modularrevisitor.algebra.impl.operation.ModularrevisitorModularrevisitorAction_AspectOperationImpl(action_Aspect, this);
	} 
	@Override
	default modularrevisitor.modularrevisitor.algebra.operation.ModularrevisitorModularrevisitorAction_AspectOperation executableNode_action_Aspect(final modularrevisitor.Action_Aspect action_Aspect) {
		return new modularrevisitor.modularrevisitor.algebra.impl.operation.ModularrevisitorModularrevisitorAction_AspectOperationImpl(action_Aspect, this);
	} 
	@Override
	default admodular.modularrevisitor.algebra.operation.AdmodularModularrevisitorActivityOperation activity(final admodular.Activity activity) {
		return new admodular.modularrevisitor.algebra.impl.operation.AdmodularModularrevisitorActivityOperationImpl(activity, this);
	} 
	@Override
	default admodular.modularrevisitor.algebra.operation.AdmodularModularrevisitorActivityOperation namedElement_activity(final admodular.Activity activity) {
		return new admodular.modularrevisitor.algebra.impl.operation.AdmodularModularrevisitorActivityOperationImpl(activity, this);
	} 
	@Override
	default modularrevisitor.modularrevisitor.algebra.operation.ModularrevisitorModularrevisitorActivityEdge_AspectOperation activityEdge_Aspect(final modularrevisitor.ActivityEdge_Aspect activityEdge_Aspect) {
		return new modularrevisitor.modularrevisitor.algebra.impl.operation.ModularrevisitorModularrevisitorActivityEdge_AspectOperationImpl(activityEdge_Aspect, this);
	} 
	@Override
	default modularrevisitor.modularrevisitor.algebra.operation.ModularrevisitorModularrevisitorActivityEdge_AspectOperation activityEdge_activityEdge_Aspect(final modularrevisitor.ActivityEdge_Aspect activityEdge_Aspect) {
		return new modularrevisitor.modularrevisitor.algebra.impl.operation.ModularrevisitorModularrevisitorActivityEdge_AspectOperationImpl(activityEdge_Aspect, this);
	} 
	@Override
	default modularrevisitor.modularrevisitor.algebra.operation.ModularrevisitorModularrevisitorActivityEdge_AspectOperation namedElement_activityEdge_Aspect(final modularrevisitor.ActivityEdge_Aspect activityEdge_Aspect) {
		return new modularrevisitor.modularrevisitor.algebra.impl.operation.ModularrevisitorModularrevisitorActivityEdge_AspectOperationImpl(activityEdge_Aspect, this);
	} 
	@Override
	default admodular.modularrevisitor.algebra.operation.AdmodularModularrevisitorActivityFinalNodeOperation activityFinalNode(final admodular.ActivityFinalNode activityFinalNode) {
		return new admodular.modularrevisitor.algebra.impl.operation.AdmodularModularrevisitorActivityFinalNodeOperationImpl(activityFinalNode, this);
	} 
	@Override
	default admodular.modularrevisitor.algebra.operation.AdmodularModularrevisitorActivityFinalNodeOperation namedElement_activityFinalNode(final admodular.ActivityFinalNode activityFinalNode) {
		return new admodular.modularrevisitor.algebra.impl.operation.AdmodularModularrevisitorActivityFinalNodeOperationImpl(activityFinalNode, this);
	} 
	@Override
	default admodular.modularrevisitor.algebra.operation.AdmodularModularrevisitorActivityFinalNodeOperation finalNode_activityFinalNode(final admodular.ActivityFinalNode activityFinalNode) {
		return new admodular.modularrevisitor.algebra.impl.operation.AdmodularModularrevisitorActivityFinalNodeOperationImpl(activityFinalNode, this);
	} 
	@Override
	default admodular.modularrevisitor.algebra.operation.AdmodularModularrevisitorActivityFinalNodeOperation activityNode_activityFinalNode(final admodular.ActivityFinalNode activityFinalNode) {
		return new admodular.modularrevisitor.algebra.impl.operation.AdmodularModularrevisitorActivityFinalNodeOperationImpl(activityFinalNode, this);
	} 
	@Override
	default admodular.modularrevisitor.algebra.operation.AdmodularModularrevisitorActivityFinalNodeOperation controlNode_activityFinalNode(final admodular.ActivityFinalNode activityFinalNode) {
		return new admodular.modularrevisitor.algebra.impl.operation.AdmodularModularrevisitorActivityFinalNodeOperationImpl(activityFinalNode, this);
	} 
	@Override
	default modularrevisitor.modularrevisitor.algebra.operation.ModularrevisitorModularrevisitorActivityFinalNode_AspectOperation activityFinalNode_Aspect(final modularrevisitor.ActivityFinalNode_Aspect activityFinalNode_Aspect) {
		return new modularrevisitor.modularrevisitor.algebra.impl.operation.ModularrevisitorModularrevisitorActivityFinalNode_AspectOperationImpl(activityFinalNode_Aspect, this);
	} 
	@Override
	default modularrevisitor.modularrevisitor.algebra.operation.ModularrevisitorModularrevisitorActivityFinalNode_AspectOperation activityFinalNode_activityFinalNode_Aspect(final modularrevisitor.ActivityFinalNode_Aspect activityFinalNode_Aspect) {
		return new modularrevisitor.modularrevisitor.algebra.impl.operation.ModularrevisitorModularrevisitorActivityFinalNode_AspectOperationImpl(activityFinalNode_Aspect, this);
	} 
	@Override
	default modularrevisitor.modularrevisitor.algebra.operation.ModularrevisitorModularrevisitorActivityFinalNode_AspectOperation namedElement_activityFinalNode_Aspect(final modularrevisitor.ActivityFinalNode_Aspect activityFinalNode_Aspect) {
		return new modularrevisitor.modularrevisitor.algebra.impl.operation.ModularrevisitorModularrevisitorActivityFinalNode_AspectOperationImpl(activityFinalNode_Aspect, this);
	} 
	@Override
	default modularrevisitor.modularrevisitor.algebra.operation.ModularrevisitorModularrevisitorActivityFinalNode_AspectOperation activityNode_Aspect_activityFinalNode_Aspect(final modularrevisitor.ActivityFinalNode_Aspect activityFinalNode_Aspect) {
		return new modularrevisitor.modularrevisitor.algebra.impl.operation.ModularrevisitorModularrevisitorActivityFinalNode_AspectOperationImpl(activityFinalNode_Aspect, this);
	} 
	@Override
	default modularrevisitor.modularrevisitor.algebra.operation.ModularrevisitorModularrevisitorActivityFinalNode_AspectOperation controlNode_Aspect_activityFinalNode_Aspect(final modularrevisitor.ActivityFinalNode_Aspect activityFinalNode_Aspect) {
		return new modularrevisitor.modularrevisitor.algebra.impl.operation.ModularrevisitorModularrevisitorActivityFinalNode_AspectOperationImpl(activityFinalNode_Aspect, this);
	} 
	@Override
	default modularrevisitor.modularrevisitor.algebra.operation.ModularrevisitorModularrevisitorActivityFinalNode_AspectOperation controlNode_activityFinalNode_Aspect(final modularrevisitor.ActivityFinalNode_Aspect activityFinalNode_Aspect) {
		return new modularrevisitor.modularrevisitor.algebra.impl.operation.ModularrevisitorModularrevisitorActivityFinalNode_AspectOperationImpl(activityFinalNode_Aspect, this);
	} 
	@Override
	default modularrevisitor.modularrevisitor.algebra.operation.ModularrevisitorModularrevisitorActivityFinalNode_AspectOperation finalNode_Aspect_activityFinalNode_Aspect(final modularrevisitor.ActivityFinalNode_Aspect activityFinalNode_Aspect) {
		return new modularrevisitor.modularrevisitor.algebra.impl.operation.ModularrevisitorModularrevisitorActivityFinalNode_AspectOperationImpl(activityFinalNode_Aspect, this);
	} 
	@Override
	default modularrevisitor.modularrevisitor.algebra.operation.ModularrevisitorModularrevisitorActivityFinalNode_AspectOperation finalNode_activityFinalNode_Aspect(final modularrevisitor.ActivityFinalNode_Aspect activityFinalNode_Aspect) {
		return new modularrevisitor.modularrevisitor.algebra.impl.operation.ModularrevisitorModularrevisitorActivityFinalNode_AspectOperationImpl(activityFinalNode_Aspect, this);
	} 
	@Override
	default modularrevisitor.modularrevisitor.algebra.operation.ModularrevisitorModularrevisitorActivityFinalNode_AspectOperation activityNode_activityFinalNode_Aspect(final modularrevisitor.ActivityFinalNode_Aspect activityFinalNode_Aspect) {
		return new modularrevisitor.modularrevisitor.algebra.impl.operation.ModularrevisitorModularrevisitorActivityFinalNode_AspectOperationImpl(activityFinalNode_Aspect, this);
	} 
	@Override
	default modularrevisitor.modularrevisitor.algebra.operation.ModularrevisitorModularrevisitorActivityNode_AspectOperation activityNode_Aspect(final modularrevisitor.ActivityNode_Aspect activityNode_Aspect) {
		return new modularrevisitor.modularrevisitor.algebra.impl.operation.ModularrevisitorModularrevisitorActivityNode_AspectOperationImpl(activityNode_Aspect, this);
	} 
	@Override
	default modularrevisitor.modularrevisitor.algebra.operation.ModularrevisitorModularrevisitorActivityNode_AspectOperation activityNode_activityNode_Aspect(final modularrevisitor.ActivityNode_Aspect activityNode_Aspect) {
		return new modularrevisitor.modularrevisitor.algebra.impl.operation.ModularrevisitorModularrevisitorActivityNode_AspectOperationImpl(activityNode_Aspect, this);
	} 
	@Override
	default modularrevisitor.modularrevisitor.algebra.operation.ModularrevisitorModularrevisitorActivityNode_AspectOperation namedElement_activityNode_Aspect(final modularrevisitor.ActivityNode_Aspect activityNode_Aspect) {
		return new modularrevisitor.modularrevisitor.algebra.impl.operation.ModularrevisitorModularrevisitorActivityNode_AspectOperationImpl(activityNode_Aspect, this);
	} 
	@Override
	default modularrevisitor.modularrevisitor.algebra.operation.ModularrevisitorModularrevisitorActivity_AspectOperation activity_Aspect(final modularrevisitor.Activity_Aspect activity_Aspect) {
		return new modularrevisitor.modularrevisitor.algebra.impl.operation.ModularrevisitorModularrevisitorActivity_AspectOperationImpl(activity_Aspect, this);
	} 
	@Override
	default modularrevisitor.modularrevisitor.algebra.operation.ModularrevisitorModularrevisitorActivity_AspectOperation namedElement_activity_Aspect(final modularrevisitor.Activity_Aspect activity_Aspect) {
		return new modularrevisitor.modularrevisitor.algebra.impl.operation.ModularrevisitorModularrevisitorActivity_AspectOperationImpl(activity_Aspect, this);
	} 
	@Override
	default modularrevisitor.modularrevisitor.algebra.operation.ModularrevisitorModularrevisitorActivity_AspectOperation activity_activity_Aspect(final modularrevisitor.Activity_Aspect activity_Aspect) {
		return new modularrevisitor.modularrevisitor.algebra.impl.operation.ModularrevisitorModularrevisitorActivity_AspectOperationImpl(activity_Aspect, this);
	} 
	@Override
	default admodular.modularrevisitor.algebra.operation.AdmodularModularrevisitorBooleanBinaryExpressionOperation booleanBinaryExpression(final admodular.BooleanBinaryExpression booleanBinaryExpression) {
		return new admodular.modularrevisitor.algebra.impl.operation.AdmodularModularrevisitorBooleanBinaryExpressionOperationImpl(booleanBinaryExpression, this);
	} 
	@Override
	default admodular.modularrevisitor.algebra.operation.AdmodularModularrevisitorBooleanBinaryExpressionOperation expression_booleanBinaryExpression(final admodular.BooleanBinaryExpression booleanBinaryExpression) {
		return new admodular.modularrevisitor.algebra.impl.operation.AdmodularModularrevisitorBooleanBinaryExpressionOperationImpl(booleanBinaryExpression, this);
	} 
	@Override
	default admodular.modularrevisitor.algebra.operation.AdmodularModularrevisitorBooleanBinaryExpressionOperation booleanExpression_booleanBinaryExpression(final admodular.BooleanBinaryExpression booleanBinaryExpression) {
		return new admodular.modularrevisitor.algebra.impl.operation.AdmodularModularrevisitorBooleanBinaryExpressionOperationImpl(booleanBinaryExpression, this);
	} 
	@Override
	default modularrevisitor.modularrevisitor.algebra.operation.ModularrevisitorModularrevisitorBooleanBinaryExpression_AspectOperation booleanBinaryExpression_Aspect(final modularrevisitor.BooleanBinaryExpression_Aspect booleanBinaryExpression_Aspect) {
		return new modularrevisitor.modularrevisitor.algebra.impl.operation.ModularrevisitorModularrevisitorBooleanBinaryExpression_AspectOperationImpl(booleanBinaryExpression_Aspect, this);
	} 
	@Override
	default modularrevisitor.modularrevisitor.algebra.operation.ModularrevisitorModularrevisitorBooleanBinaryExpression_AspectOperation booleanExpression_booleanBinaryExpression_Aspect(final modularrevisitor.BooleanBinaryExpression_Aspect booleanBinaryExpression_Aspect) {
		return new modularrevisitor.modularrevisitor.algebra.impl.operation.ModularrevisitorModularrevisitorBooleanBinaryExpression_AspectOperationImpl(booleanBinaryExpression_Aspect, this);
	} 
	@Override
	default modularrevisitor.modularrevisitor.algebra.operation.ModularrevisitorModularrevisitorBooleanBinaryExpression_AspectOperation booleanExpression_Aspect_booleanBinaryExpression_Aspect(final modularrevisitor.BooleanBinaryExpression_Aspect booleanBinaryExpression_Aspect) {
		return new modularrevisitor.modularrevisitor.algebra.impl.operation.ModularrevisitorModularrevisitorBooleanBinaryExpression_AspectOperationImpl(booleanBinaryExpression_Aspect, this);
	} 
	@Override
	default modularrevisitor.modularrevisitor.algebra.operation.ModularrevisitorModularrevisitorBooleanBinaryExpression_AspectOperation expression_booleanBinaryExpression_Aspect(final modularrevisitor.BooleanBinaryExpression_Aspect booleanBinaryExpression_Aspect) {
		return new modularrevisitor.modularrevisitor.algebra.impl.operation.ModularrevisitorModularrevisitorBooleanBinaryExpression_AspectOperationImpl(booleanBinaryExpression_Aspect, this);
	} 
	@Override
	default modularrevisitor.modularrevisitor.algebra.operation.ModularrevisitorModularrevisitorBooleanBinaryExpression_AspectOperation booleanBinaryExpression_booleanBinaryExpression_Aspect(final modularrevisitor.BooleanBinaryExpression_Aspect booleanBinaryExpression_Aspect) {
		return new modularrevisitor.modularrevisitor.algebra.impl.operation.ModularrevisitorModularrevisitorBooleanBinaryExpression_AspectOperationImpl(booleanBinaryExpression_Aspect, this);
	} 
	@Override
	default modularrevisitor.modularrevisitor.algebra.operation.ModularrevisitorModularrevisitorBooleanExpression_AspectOperation booleanExpression_Aspect(final modularrevisitor.BooleanExpression_Aspect booleanExpression_Aspect) {
		return new modularrevisitor.modularrevisitor.algebra.impl.operation.ModularrevisitorModularrevisitorBooleanExpression_AspectOperationImpl(booleanExpression_Aspect, this);
	} 
	@Override
	default modularrevisitor.modularrevisitor.algebra.operation.ModularrevisitorModularrevisitorBooleanExpression_AspectOperation expression_booleanExpression_Aspect(final modularrevisitor.BooleanExpression_Aspect booleanExpression_Aspect) {
		return new modularrevisitor.modularrevisitor.algebra.impl.operation.ModularrevisitorModularrevisitorBooleanExpression_AspectOperationImpl(booleanExpression_Aspect, this);
	} 
	@Override
	default modularrevisitor.modularrevisitor.algebra.operation.ModularrevisitorModularrevisitorBooleanExpression_AspectOperation booleanExpression_booleanExpression_Aspect(final modularrevisitor.BooleanExpression_Aspect booleanExpression_Aspect) {
		return new modularrevisitor.modularrevisitor.algebra.impl.operation.ModularrevisitorModularrevisitorBooleanExpression_AspectOperationImpl(booleanExpression_Aspect, this);
	} 
	@Override
	default admodular.modularrevisitor.algebra.operation.AdmodularModularrevisitorBooleanUnaryExpressionOperation booleanUnaryExpression(final admodular.BooleanUnaryExpression booleanUnaryExpression) {
		return new admodular.modularrevisitor.algebra.impl.operation.AdmodularModularrevisitorBooleanUnaryExpressionOperationImpl(booleanUnaryExpression, this);
	} 
	@Override
	default admodular.modularrevisitor.algebra.operation.AdmodularModularrevisitorBooleanUnaryExpressionOperation expression_booleanUnaryExpression(final admodular.BooleanUnaryExpression booleanUnaryExpression) {
		return new admodular.modularrevisitor.algebra.impl.operation.AdmodularModularrevisitorBooleanUnaryExpressionOperationImpl(booleanUnaryExpression, this);
	} 
	@Override
	default admodular.modularrevisitor.algebra.operation.AdmodularModularrevisitorBooleanUnaryExpressionOperation booleanExpression_booleanUnaryExpression(final admodular.BooleanUnaryExpression booleanUnaryExpression) {
		return new admodular.modularrevisitor.algebra.impl.operation.AdmodularModularrevisitorBooleanUnaryExpressionOperationImpl(booleanUnaryExpression, this);
	} 
	@Override
	default modularrevisitor.modularrevisitor.algebra.operation.ModularrevisitorModularrevisitorBooleanUnaryExpression_AspectOperation booleanUnaryExpression_Aspect(final modularrevisitor.BooleanUnaryExpression_Aspect booleanUnaryExpression_Aspect) {
		return new modularrevisitor.modularrevisitor.algebra.impl.operation.ModularrevisitorModularrevisitorBooleanUnaryExpression_AspectOperationImpl(booleanUnaryExpression_Aspect, this);
	} 
	@Override
	default modularrevisitor.modularrevisitor.algebra.operation.ModularrevisitorModularrevisitorBooleanUnaryExpression_AspectOperation booleanExpression_booleanUnaryExpression_Aspect(final modularrevisitor.BooleanUnaryExpression_Aspect booleanUnaryExpression_Aspect) {
		return new modularrevisitor.modularrevisitor.algebra.impl.operation.ModularrevisitorModularrevisitorBooleanUnaryExpression_AspectOperationImpl(booleanUnaryExpression_Aspect, this);
	} 
	@Override
	default modularrevisitor.modularrevisitor.algebra.operation.ModularrevisitorModularrevisitorBooleanUnaryExpression_AspectOperation booleanExpression_Aspect_booleanUnaryExpression_Aspect(final modularrevisitor.BooleanUnaryExpression_Aspect booleanUnaryExpression_Aspect) {
		return new modularrevisitor.modularrevisitor.algebra.impl.operation.ModularrevisitorModularrevisitorBooleanUnaryExpression_AspectOperationImpl(booleanUnaryExpression_Aspect, this);
	} 
	@Override
	default modularrevisitor.modularrevisitor.algebra.operation.ModularrevisitorModularrevisitorBooleanUnaryExpression_AspectOperation booleanUnaryExpression_booleanUnaryExpression_Aspect(final modularrevisitor.BooleanUnaryExpression_Aspect booleanUnaryExpression_Aspect) {
		return new modularrevisitor.modularrevisitor.algebra.impl.operation.ModularrevisitorModularrevisitorBooleanUnaryExpression_AspectOperationImpl(booleanUnaryExpression_Aspect, this);
	} 
	@Override
	default modularrevisitor.modularrevisitor.algebra.operation.ModularrevisitorModularrevisitorBooleanUnaryExpression_AspectOperation expression_booleanUnaryExpression_Aspect(final modularrevisitor.BooleanUnaryExpression_Aspect booleanUnaryExpression_Aspect) {
		return new modularrevisitor.modularrevisitor.algebra.impl.operation.ModularrevisitorModularrevisitorBooleanUnaryExpression_AspectOperationImpl(booleanUnaryExpression_Aspect, this);
	} 
	@Override
	default admodular.modularrevisitor.algebra.operation.AdmodularModularrevisitorBooleanValueOperation booleanValue(final admodular.BooleanValue booleanValue) {
		return new admodular.modularrevisitor.algebra.impl.operation.AdmodularModularrevisitorBooleanValueOperationImpl(booleanValue, this);
	} 
	@Override
	default admodular.modularrevisitor.algebra.operation.AdmodularModularrevisitorBooleanValueOperation value_booleanValue(final admodular.BooleanValue booleanValue) {
		return new admodular.modularrevisitor.algebra.impl.operation.AdmodularModularrevisitorBooleanValueOperationImpl(booleanValue, this);
	} 
	@Override
	default modularrevisitor.modularrevisitor.algebra.operation.ModularrevisitorModularrevisitorBooleanValue_AspectOperation booleanValue_Aspect(final modularrevisitor.BooleanValue_Aspect booleanValue_Aspect) {
		return new modularrevisitor.modularrevisitor.algebra.impl.operation.ModularrevisitorModularrevisitorBooleanValue_AspectOperationImpl(booleanValue_Aspect, this);
	} 
	@Override
	default modularrevisitor.modularrevisitor.algebra.operation.ModularrevisitorModularrevisitorBooleanValue_AspectOperation value_booleanValue_Aspect(final modularrevisitor.BooleanValue_Aspect booleanValue_Aspect) {
		return new modularrevisitor.modularrevisitor.algebra.impl.operation.ModularrevisitorModularrevisitorBooleanValue_AspectOperationImpl(booleanValue_Aspect, this);
	} 
	@Override
	default modularrevisitor.modularrevisitor.algebra.operation.ModularrevisitorModularrevisitorBooleanValue_AspectOperation booleanValue_booleanValue_Aspect(final modularrevisitor.BooleanValue_Aspect booleanValue_Aspect) {
		return new modularrevisitor.modularrevisitor.algebra.impl.operation.ModularrevisitorModularrevisitorBooleanValue_AspectOperationImpl(booleanValue_Aspect, this);
	} 
	@Override
	default admodular.modularrevisitor.algebra.operation.AdmodularModularrevisitorBooleanVariableOperation booleanVariable(final admodular.BooleanVariable booleanVariable) {
		return new admodular.modularrevisitor.algebra.impl.operation.AdmodularModularrevisitorBooleanVariableOperationImpl(booleanVariable, this);
	} 
	@Override
	default admodular.modularrevisitor.algebra.operation.AdmodularModularrevisitorBooleanVariableOperation variable_booleanVariable(final admodular.BooleanVariable booleanVariable) {
		return new admodular.modularrevisitor.algebra.impl.operation.AdmodularModularrevisitorBooleanVariableOperationImpl(booleanVariable, this);
	} 
	@Override
	default modularrevisitor.modularrevisitor.algebra.operation.ModularrevisitorModularrevisitorBooleanVariable_AspectOperation booleanVariable_Aspect(final modularrevisitor.BooleanVariable_Aspect booleanVariable_Aspect) {
		return new modularrevisitor.modularrevisitor.algebra.impl.operation.ModularrevisitorModularrevisitorBooleanVariable_AspectOperationImpl(booleanVariable_Aspect, this);
	} 
	@Override
	default modularrevisitor.modularrevisitor.algebra.operation.ModularrevisitorModularrevisitorBooleanVariable_AspectOperation variable_booleanVariable_Aspect(final modularrevisitor.BooleanVariable_Aspect booleanVariable_Aspect) {
		return new modularrevisitor.modularrevisitor.algebra.impl.operation.ModularrevisitorModularrevisitorBooleanVariable_AspectOperationImpl(booleanVariable_Aspect, this);
	} 
	@Override
	default modularrevisitor.modularrevisitor.algebra.operation.ModularrevisitorModularrevisitorBooleanVariable_AspectOperation variable_Aspect_booleanVariable_Aspect(final modularrevisitor.BooleanVariable_Aspect booleanVariable_Aspect) {
		return new modularrevisitor.modularrevisitor.algebra.impl.operation.ModularrevisitorModularrevisitorBooleanVariable_AspectOperationImpl(booleanVariable_Aspect, this);
	} 
	@Override
	default modularrevisitor.modularrevisitor.algebra.operation.ModularrevisitorModularrevisitorBooleanVariable_AspectOperation booleanVariable_booleanVariable_Aspect(final modularrevisitor.BooleanVariable_Aspect booleanVariable_Aspect) {
		return new modularrevisitor.modularrevisitor.algebra.impl.operation.ModularrevisitorModularrevisitorBooleanVariable_AspectOperationImpl(booleanVariable_Aspect, this);
	} 
	@Override
	default admodular.modularrevisitor.algebra.operation.AdmodularModularrevisitorControlFlowOperation controlFlow(final admodular.ControlFlow controlFlow) {
		return new admodular.modularrevisitor.algebra.impl.operation.AdmodularModularrevisitorControlFlowOperationImpl(controlFlow, this);
	} 
	@Override
	default admodular.modularrevisitor.algebra.operation.AdmodularModularrevisitorControlFlowOperation activityEdge_controlFlow(final admodular.ControlFlow controlFlow) {
		return new admodular.modularrevisitor.algebra.impl.operation.AdmodularModularrevisitorControlFlowOperationImpl(controlFlow, this);
	} 
	@Override
	default admodular.modularrevisitor.algebra.operation.AdmodularModularrevisitorControlFlowOperation namedElement_controlFlow(final admodular.ControlFlow controlFlow) {
		return new admodular.modularrevisitor.algebra.impl.operation.AdmodularModularrevisitorControlFlowOperationImpl(controlFlow, this);
	} 
	@Override
	default modularrevisitor.modularrevisitor.algebra.operation.ModularrevisitorModularrevisitorControlFlow_AspectOperation controlFlow_Aspect(final modularrevisitor.ControlFlow_Aspect controlFlow_Aspect) {
		return new modularrevisitor.modularrevisitor.algebra.impl.operation.ModularrevisitorModularrevisitorControlFlow_AspectOperationImpl(controlFlow_Aspect, this);
	} 
	@Override
	default modularrevisitor.modularrevisitor.algebra.operation.ModularrevisitorModularrevisitorControlFlow_AspectOperation namedElement_controlFlow_Aspect(final modularrevisitor.ControlFlow_Aspect controlFlow_Aspect) {
		return new modularrevisitor.modularrevisitor.algebra.impl.operation.ModularrevisitorModularrevisitorControlFlow_AspectOperationImpl(controlFlow_Aspect, this);
	} 
	@Override
	default modularrevisitor.modularrevisitor.algebra.operation.ModularrevisitorModularrevisitorControlFlow_AspectOperation activityEdge_Aspect_controlFlow_Aspect(final modularrevisitor.ControlFlow_Aspect controlFlow_Aspect) {
		return new modularrevisitor.modularrevisitor.algebra.impl.operation.ModularrevisitorModularrevisitorControlFlow_AspectOperationImpl(controlFlow_Aspect, this);
	} 
	@Override
	default modularrevisitor.modularrevisitor.algebra.operation.ModularrevisitorModularrevisitorControlFlow_AspectOperation controlFlow_controlFlow_Aspect(final modularrevisitor.ControlFlow_Aspect controlFlow_Aspect) {
		return new modularrevisitor.modularrevisitor.algebra.impl.operation.ModularrevisitorModularrevisitorControlFlow_AspectOperationImpl(controlFlow_Aspect, this);
	} 
	@Override
	default modularrevisitor.modularrevisitor.algebra.operation.ModularrevisitorModularrevisitorControlFlow_AspectOperation activityEdge_controlFlow_Aspect(final modularrevisitor.ControlFlow_Aspect controlFlow_Aspect) {
		return new modularrevisitor.modularrevisitor.algebra.impl.operation.ModularrevisitorModularrevisitorControlFlow_AspectOperationImpl(controlFlow_Aspect, this);
	} 
	@Override
	default modularrevisitor.modularrevisitor.algebra.operation.ModularrevisitorModularrevisitorControlNode_AspectOperation controlNode_Aspect(final modularrevisitor.ControlNode_Aspect controlNode_Aspect) {
		return new modularrevisitor.modularrevisitor.algebra.impl.operation.ModularrevisitorModularrevisitorControlNode_AspectOperationImpl(controlNode_Aspect, this);
	} 
	@Override
	default modularrevisitor.modularrevisitor.algebra.operation.ModularrevisitorModularrevisitorControlNode_AspectOperation namedElement_controlNode_Aspect(final modularrevisitor.ControlNode_Aspect controlNode_Aspect) {
		return new modularrevisitor.modularrevisitor.algebra.impl.operation.ModularrevisitorModularrevisitorControlNode_AspectOperationImpl(controlNode_Aspect, this);
	} 
	@Override
	default modularrevisitor.modularrevisitor.algebra.operation.ModularrevisitorModularrevisitorControlNode_AspectOperation activityNode_Aspect_controlNode_Aspect(final modularrevisitor.ControlNode_Aspect controlNode_Aspect) {
		return new modularrevisitor.modularrevisitor.algebra.impl.operation.ModularrevisitorModularrevisitorControlNode_AspectOperationImpl(controlNode_Aspect, this);
	} 
	@Override
	default modularrevisitor.modularrevisitor.algebra.operation.ModularrevisitorModularrevisitorControlNode_AspectOperation activityNode_controlNode_Aspect(final modularrevisitor.ControlNode_Aspect controlNode_Aspect) {
		return new modularrevisitor.modularrevisitor.algebra.impl.operation.ModularrevisitorModularrevisitorControlNode_AspectOperationImpl(controlNode_Aspect, this);
	} 
	@Override
	default modularrevisitor.modularrevisitor.algebra.operation.ModularrevisitorModularrevisitorControlNode_AspectOperation controlNode_controlNode_Aspect(final modularrevisitor.ControlNode_Aspect controlNode_Aspect) {
		return new modularrevisitor.modularrevisitor.algebra.impl.operation.ModularrevisitorModularrevisitorControlNode_AspectOperationImpl(controlNode_Aspect, this);
	} 
	@Override
	default modularrevisitor.modularrevisitor.algebra.operation.ModularrevisitorModularrevisitorControlTokenOperation controlToken(final modularrevisitor.ControlToken controlToken) {
		return new modularrevisitor.modularrevisitor.algebra.impl.operation.ModularrevisitorModularrevisitorControlTokenOperationImpl(controlToken, this);
	} 
	@Override
	default modularrevisitor.modularrevisitor.algebra.operation.ModularrevisitorModularrevisitorControlTokenOperation token_controlToken(final modularrevisitor.ControlToken controlToken) {
		return new modularrevisitor.modularrevisitor.algebra.impl.operation.ModularrevisitorModularrevisitorControlTokenOperationImpl(controlToken, this);
	} 
	@Override
	default admodular.modularrevisitor.algebra.operation.AdmodularModularrevisitorDecisionNodeOperation decisionNode(final admodular.DecisionNode decisionNode) {
		return new admodular.modularrevisitor.algebra.impl.operation.AdmodularModularrevisitorDecisionNodeOperationImpl(decisionNode, this);
	} 
	@Override
	default admodular.modularrevisitor.algebra.operation.AdmodularModularrevisitorDecisionNodeOperation activityNode_decisionNode(final admodular.DecisionNode decisionNode) {
		return new admodular.modularrevisitor.algebra.impl.operation.AdmodularModularrevisitorDecisionNodeOperationImpl(decisionNode, this);
	} 
	@Override
	default admodular.modularrevisitor.algebra.operation.AdmodularModularrevisitorDecisionNodeOperation namedElement_decisionNode(final admodular.DecisionNode decisionNode) {
		return new admodular.modularrevisitor.algebra.impl.operation.AdmodularModularrevisitorDecisionNodeOperationImpl(decisionNode, this);
	} 
	@Override
	default admodular.modularrevisitor.algebra.operation.AdmodularModularrevisitorDecisionNodeOperation controlNode_decisionNode(final admodular.DecisionNode decisionNode) {
		return new admodular.modularrevisitor.algebra.impl.operation.AdmodularModularrevisitorDecisionNodeOperationImpl(decisionNode, this);
	} 
	@Override
	default modularrevisitor.modularrevisitor.algebra.operation.ModularrevisitorModularrevisitorDecisionNode_AspectOperation decisionNode_Aspect(final modularrevisitor.DecisionNode_Aspect decisionNode_Aspect) {
		return new modularrevisitor.modularrevisitor.algebra.impl.operation.ModularrevisitorModularrevisitorDecisionNode_AspectOperationImpl(decisionNode_Aspect, this);
	} 
	@Override
	default modularrevisitor.modularrevisitor.algebra.operation.ModularrevisitorModularrevisitorDecisionNode_AspectOperation decisionNode_decisionNode_Aspect(final modularrevisitor.DecisionNode_Aspect decisionNode_Aspect) {
		return new modularrevisitor.modularrevisitor.algebra.impl.operation.ModularrevisitorModularrevisitorDecisionNode_AspectOperationImpl(decisionNode_Aspect, this);
	} 
	@Override
	default modularrevisitor.modularrevisitor.algebra.operation.ModularrevisitorModularrevisitorDecisionNode_AspectOperation namedElement_decisionNode_Aspect(final modularrevisitor.DecisionNode_Aspect decisionNode_Aspect) {
		return new modularrevisitor.modularrevisitor.algebra.impl.operation.ModularrevisitorModularrevisitorDecisionNode_AspectOperationImpl(decisionNode_Aspect, this);
	} 
	@Override
	default modularrevisitor.modularrevisitor.algebra.operation.ModularrevisitorModularrevisitorDecisionNode_AspectOperation activityNode_Aspect_decisionNode_Aspect(final modularrevisitor.DecisionNode_Aspect decisionNode_Aspect) {
		return new modularrevisitor.modularrevisitor.algebra.impl.operation.ModularrevisitorModularrevisitorDecisionNode_AspectOperationImpl(decisionNode_Aspect, this);
	} 
	@Override
	default modularrevisitor.modularrevisitor.algebra.operation.ModularrevisitorModularrevisitorDecisionNode_AspectOperation activityNode_decisionNode_Aspect(final modularrevisitor.DecisionNode_Aspect decisionNode_Aspect) {
		return new modularrevisitor.modularrevisitor.algebra.impl.operation.ModularrevisitorModularrevisitorDecisionNode_AspectOperationImpl(decisionNode_Aspect, this);
	} 
	@Override
	default modularrevisitor.modularrevisitor.algebra.operation.ModularrevisitorModularrevisitorDecisionNode_AspectOperation controlNode_Aspect_decisionNode_Aspect(final modularrevisitor.DecisionNode_Aspect decisionNode_Aspect) {
		return new modularrevisitor.modularrevisitor.algebra.impl.operation.ModularrevisitorModularrevisitorDecisionNode_AspectOperationImpl(decisionNode_Aspect, this);
	} 
	@Override
	default modularrevisitor.modularrevisitor.algebra.operation.ModularrevisitorModularrevisitorDecisionNode_AspectOperation controlNode_decisionNode_Aspect(final modularrevisitor.DecisionNode_Aspect decisionNode_Aspect) {
		return new modularrevisitor.modularrevisitor.algebra.impl.operation.ModularrevisitorModularrevisitorDecisionNode_AspectOperationImpl(decisionNode_Aspect, this);
	} 
	@Override
	default modularrevisitor.modularrevisitor.algebra.operation.ModularrevisitorModularrevisitorExecutableNode_AspectOperation executableNode_Aspect(final modularrevisitor.ExecutableNode_Aspect executableNode_Aspect) {
		return new modularrevisitor.modularrevisitor.algebra.impl.operation.ModularrevisitorModularrevisitorExecutableNode_AspectOperationImpl(executableNode_Aspect, this);
	} 
	@Override
	default modularrevisitor.modularrevisitor.algebra.operation.ModularrevisitorModularrevisitorExecutableNode_AspectOperation namedElement_executableNode_Aspect(final modularrevisitor.ExecutableNode_Aspect executableNode_Aspect) {
		return new modularrevisitor.modularrevisitor.algebra.impl.operation.ModularrevisitorModularrevisitorExecutableNode_AspectOperationImpl(executableNode_Aspect, this);
	} 
	@Override
	default modularrevisitor.modularrevisitor.algebra.operation.ModularrevisitorModularrevisitorExecutableNode_AspectOperation activityNode_Aspect_executableNode_Aspect(final modularrevisitor.ExecutableNode_Aspect executableNode_Aspect) {
		return new modularrevisitor.modularrevisitor.algebra.impl.operation.ModularrevisitorModularrevisitorExecutableNode_AspectOperationImpl(executableNode_Aspect, this);
	} 
	@Override
	default modularrevisitor.modularrevisitor.algebra.operation.ModularrevisitorModularrevisitorExecutableNode_AspectOperation activityNode_executableNode_Aspect(final modularrevisitor.ExecutableNode_Aspect executableNode_Aspect) {
		return new modularrevisitor.modularrevisitor.algebra.impl.operation.ModularrevisitorModularrevisitorExecutableNode_AspectOperationImpl(executableNode_Aspect, this);
	} 
	@Override
	default modularrevisitor.modularrevisitor.algebra.operation.ModularrevisitorModularrevisitorExecutableNode_AspectOperation executableNode_executableNode_Aspect(final modularrevisitor.ExecutableNode_Aspect executableNode_Aspect) {
		return new modularrevisitor.modularrevisitor.algebra.impl.operation.ModularrevisitorModularrevisitorExecutableNode_AspectOperationImpl(executableNode_Aspect, this);
	} 
	@Override
	default modularrevisitor.modularrevisitor.algebra.operation.ModularrevisitorModularrevisitorFinalNode_AspectOperation finalNode_Aspect(final modularrevisitor.FinalNode_Aspect finalNode_Aspect) {
		return new modularrevisitor.modularrevisitor.algebra.impl.operation.ModularrevisitorModularrevisitorFinalNode_AspectOperationImpl(finalNode_Aspect, this);
	} 
	@Override
	default modularrevisitor.modularrevisitor.algebra.operation.ModularrevisitorModularrevisitorFinalNode_AspectOperation namedElement_finalNode_Aspect(final modularrevisitor.FinalNode_Aspect finalNode_Aspect) {
		return new modularrevisitor.modularrevisitor.algebra.impl.operation.ModularrevisitorModularrevisitorFinalNode_AspectOperationImpl(finalNode_Aspect, this);
	} 
	@Override
	default modularrevisitor.modularrevisitor.algebra.operation.ModularrevisitorModularrevisitorFinalNode_AspectOperation finalNode_finalNode_Aspect(final modularrevisitor.FinalNode_Aspect finalNode_Aspect) {
		return new modularrevisitor.modularrevisitor.algebra.impl.operation.ModularrevisitorModularrevisitorFinalNode_AspectOperationImpl(finalNode_Aspect, this);
	} 
	@Override
	default modularrevisitor.modularrevisitor.algebra.operation.ModularrevisitorModularrevisitorFinalNode_AspectOperation activityNode_Aspect_finalNode_Aspect(final modularrevisitor.FinalNode_Aspect finalNode_Aspect) {
		return new modularrevisitor.modularrevisitor.algebra.impl.operation.ModularrevisitorModularrevisitorFinalNode_AspectOperationImpl(finalNode_Aspect, this);
	} 
	@Override
	default modularrevisitor.modularrevisitor.algebra.operation.ModularrevisitorModularrevisitorFinalNode_AspectOperation activityNode_finalNode_Aspect(final modularrevisitor.FinalNode_Aspect finalNode_Aspect) {
		return new modularrevisitor.modularrevisitor.algebra.impl.operation.ModularrevisitorModularrevisitorFinalNode_AspectOperationImpl(finalNode_Aspect, this);
	} 
	@Override
	default modularrevisitor.modularrevisitor.algebra.operation.ModularrevisitorModularrevisitorFinalNode_AspectOperation controlNode_Aspect_finalNode_Aspect(final modularrevisitor.FinalNode_Aspect finalNode_Aspect) {
		return new modularrevisitor.modularrevisitor.algebra.impl.operation.ModularrevisitorModularrevisitorFinalNode_AspectOperationImpl(finalNode_Aspect, this);
	} 
	@Override
	default modularrevisitor.modularrevisitor.algebra.operation.ModularrevisitorModularrevisitorFinalNode_AspectOperation controlNode_finalNode_Aspect(final modularrevisitor.FinalNode_Aspect finalNode_Aspect) {
		return new modularrevisitor.modularrevisitor.algebra.impl.operation.ModularrevisitorModularrevisitorFinalNode_AspectOperationImpl(finalNode_Aspect, this);
	} 
	@Override
	default admodular.modularrevisitor.algebra.operation.AdmodularModularrevisitorForkNodeOperation forkNode(final admodular.ForkNode forkNode) {
		return new admodular.modularrevisitor.algebra.impl.operation.AdmodularModularrevisitorForkNodeOperationImpl(forkNode, this);
	} 
	@Override
	default admodular.modularrevisitor.algebra.operation.AdmodularModularrevisitorForkNodeOperation activityNode_forkNode(final admodular.ForkNode forkNode) {
		return new admodular.modularrevisitor.algebra.impl.operation.AdmodularModularrevisitorForkNodeOperationImpl(forkNode, this);
	} 
	@Override
	default admodular.modularrevisitor.algebra.operation.AdmodularModularrevisitorForkNodeOperation namedElement_forkNode(final admodular.ForkNode forkNode) {
		return new admodular.modularrevisitor.algebra.impl.operation.AdmodularModularrevisitorForkNodeOperationImpl(forkNode, this);
	} 
	@Override
	default admodular.modularrevisitor.algebra.operation.AdmodularModularrevisitorForkNodeOperation controlNode_forkNode(final admodular.ForkNode forkNode) {
		return new admodular.modularrevisitor.algebra.impl.operation.AdmodularModularrevisitorForkNodeOperationImpl(forkNode, this);
	} 
	@Override
	default modularrevisitor.modularrevisitor.algebra.operation.ModularrevisitorModularrevisitorForkNode_AspectOperation forkNode_Aspect(final modularrevisitor.ForkNode_Aspect forkNode_Aspect) {
		return new modularrevisitor.modularrevisitor.algebra.impl.operation.ModularrevisitorModularrevisitorForkNode_AspectOperationImpl(forkNode_Aspect, this);
	} 
	@Override
	default modularrevisitor.modularrevisitor.algebra.operation.ModularrevisitorModularrevisitorForkNode_AspectOperation forkNode_forkNode_Aspect(final modularrevisitor.ForkNode_Aspect forkNode_Aspect) {
		return new modularrevisitor.modularrevisitor.algebra.impl.operation.ModularrevisitorModularrevisitorForkNode_AspectOperationImpl(forkNode_Aspect, this);
	} 
	@Override
	default modularrevisitor.modularrevisitor.algebra.operation.ModularrevisitorModularrevisitorForkNode_AspectOperation namedElement_forkNode_Aspect(final modularrevisitor.ForkNode_Aspect forkNode_Aspect) {
		return new modularrevisitor.modularrevisitor.algebra.impl.operation.ModularrevisitorModularrevisitorForkNode_AspectOperationImpl(forkNode_Aspect, this);
	} 
	@Override
	default modularrevisitor.modularrevisitor.algebra.operation.ModularrevisitorModularrevisitorForkNode_AspectOperation activityNode_Aspect_forkNode_Aspect(final modularrevisitor.ForkNode_Aspect forkNode_Aspect) {
		return new modularrevisitor.modularrevisitor.algebra.impl.operation.ModularrevisitorModularrevisitorForkNode_AspectOperationImpl(forkNode_Aspect, this);
	} 
	@Override
	default modularrevisitor.modularrevisitor.algebra.operation.ModularrevisitorModularrevisitorForkNode_AspectOperation activityNode_forkNode_Aspect(final modularrevisitor.ForkNode_Aspect forkNode_Aspect) {
		return new modularrevisitor.modularrevisitor.algebra.impl.operation.ModularrevisitorModularrevisitorForkNode_AspectOperationImpl(forkNode_Aspect, this);
	} 
	@Override
	default modularrevisitor.modularrevisitor.algebra.operation.ModularrevisitorModularrevisitorForkNode_AspectOperation controlNode_Aspect_forkNode_Aspect(final modularrevisitor.ForkNode_Aspect forkNode_Aspect) {
		return new modularrevisitor.modularrevisitor.algebra.impl.operation.ModularrevisitorModularrevisitorForkNode_AspectOperationImpl(forkNode_Aspect, this);
	} 
	@Override
	default modularrevisitor.modularrevisitor.algebra.operation.ModularrevisitorModularrevisitorForkNode_AspectOperation controlNode_forkNode_Aspect(final modularrevisitor.ForkNode_Aspect forkNode_Aspect) {
		return new modularrevisitor.modularrevisitor.algebra.impl.operation.ModularrevisitorModularrevisitorForkNode_AspectOperationImpl(forkNode_Aspect, this);
	} 
	@Override
	default modularrevisitor.modularrevisitor.algebra.operation.ModularrevisitorModularrevisitorForkedTokenOperation forkedToken(final modularrevisitor.ForkedToken forkedToken) {
		return new modularrevisitor.modularrevisitor.algebra.impl.operation.ModularrevisitorModularrevisitorForkedTokenOperationImpl(forkedToken, this);
	} 
	@Override
	default modularrevisitor.modularrevisitor.algebra.operation.ModularrevisitorModularrevisitorForkedTokenOperation token_forkedToken(final modularrevisitor.ForkedToken forkedToken) {
		return new modularrevisitor.modularrevisitor.algebra.impl.operation.ModularrevisitorModularrevisitorForkedTokenOperationImpl(forkedToken, this);
	} 
	@Override
	default admodular.modularrevisitor.algebra.operation.AdmodularModularrevisitorInitialNodeOperation initialNode(final admodular.InitialNode initialNode) {
		return new admodular.modularrevisitor.algebra.impl.operation.AdmodularModularrevisitorInitialNodeOperationImpl(initialNode, this);
	} 
	@Override
	default admodular.modularrevisitor.algebra.operation.AdmodularModularrevisitorInitialNodeOperation activityNode_initialNode(final admodular.InitialNode initialNode) {
		return new admodular.modularrevisitor.algebra.impl.operation.AdmodularModularrevisitorInitialNodeOperationImpl(initialNode, this);
	} 
	@Override
	default admodular.modularrevisitor.algebra.operation.AdmodularModularrevisitorInitialNodeOperation namedElement_initialNode(final admodular.InitialNode initialNode) {
		return new admodular.modularrevisitor.algebra.impl.operation.AdmodularModularrevisitorInitialNodeOperationImpl(initialNode, this);
	} 
	@Override
	default admodular.modularrevisitor.algebra.operation.AdmodularModularrevisitorInitialNodeOperation controlNode_initialNode(final admodular.InitialNode initialNode) {
		return new admodular.modularrevisitor.algebra.impl.operation.AdmodularModularrevisitorInitialNodeOperationImpl(initialNode, this);
	} 
	@Override
	default modularrevisitor.modularrevisitor.algebra.operation.ModularrevisitorModularrevisitorInitialNode_AspectOperation initialNode_Aspect(final modularrevisitor.InitialNode_Aspect initialNode_Aspect) {
		return new modularrevisitor.modularrevisitor.algebra.impl.operation.ModularrevisitorModularrevisitorInitialNode_AspectOperationImpl(initialNode_Aspect, this);
	} 
	@Override
	default modularrevisitor.modularrevisitor.algebra.operation.ModularrevisitorModularrevisitorInitialNode_AspectOperation namedElement_initialNode_Aspect(final modularrevisitor.InitialNode_Aspect initialNode_Aspect) {
		return new modularrevisitor.modularrevisitor.algebra.impl.operation.ModularrevisitorModularrevisitorInitialNode_AspectOperationImpl(initialNode_Aspect, this);
	} 
	@Override
	default modularrevisitor.modularrevisitor.algebra.operation.ModularrevisitorModularrevisitorInitialNode_AspectOperation activityNode_Aspect_initialNode_Aspect(final modularrevisitor.InitialNode_Aspect initialNode_Aspect) {
		return new modularrevisitor.modularrevisitor.algebra.impl.operation.ModularrevisitorModularrevisitorInitialNode_AspectOperationImpl(initialNode_Aspect, this);
	} 
	@Override
	default modularrevisitor.modularrevisitor.algebra.operation.ModularrevisitorModularrevisitorInitialNode_AspectOperation activityNode_initialNode_Aspect(final modularrevisitor.InitialNode_Aspect initialNode_Aspect) {
		return new modularrevisitor.modularrevisitor.algebra.impl.operation.ModularrevisitorModularrevisitorInitialNode_AspectOperationImpl(initialNode_Aspect, this);
	} 
	@Override
	default modularrevisitor.modularrevisitor.algebra.operation.ModularrevisitorModularrevisitorInitialNode_AspectOperation controlNode_Aspect_initialNode_Aspect(final modularrevisitor.InitialNode_Aspect initialNode_Aspect) {
		return new modularrevisitor.modularrevisitor.algebra.impl.operation.ModularrevisitorModularrevisitorInitialNode_AspectOperationImpl(initialNode_Aspect, this);
	} 
	@Override
	default modularrevisitor.modularrevisitor.algebra.operation.ModularrevisitorModularrevisitorInitialNode_AspectOperation controlNode_initialNode_Aspect(final modularrevisitor.InitialNode_Aspect initialNode_Aspect) {
		return new modularrevisitor.modularrevisitor.algebra.impl.operation.ModularrevisitorModularrevisitorInitialNode_AspectOperationImpl(initialNode_Aspect, this);
	} 
	@Override
	default modularrevisitor.modularrevisitor.algebra.operation.ModularrevisitorModularrevisitorInitialNode_AspectOperation initialNode_initialNode_Aspect(final modularrevisitor.InitialNode_Aspect initialNode_Aspect) {
		return new modularrevisitor.modularrevisitor.algebra.impl.operation.ModularrevisitorModularrevisitorInitialNode_AspectOperationImpl(initialNode_Aspect, this);
	} 
	@Override
	default modularrevisitor.modularrevisitor.algebra.operation.ModularrevisitorModularrevisitorInputOperation input(final modularrevisitor.Input input) {
		return new modularrevisitor.modularrevisitor.algebra.impl.operation.ModularrevisitorModularrevisitorInputOperationImpl(input, this);
	} 
	@Override
	default modularrevisitor.modularrevisitor.algebra.operation.ModularrevisitorModularrevisitorInputValueOperation inputValue(final modularrevisitor.InputValue inputValue) {
		return new modularrevisitor.modularrevisitor.algebra.impl.operation.ModularrevisitorModularrevisitorInputValueOperationImpl(inputValue, this);
	} 
	@Override
	default admodular.modularrevisitor.algebra.operation.AdmodularModularrevisitorIntegerCalculationExpressionOperation integerCalculationExpression(final admodular.IntegerCalculationExpression integerCalculationExpression) {
		return new admodular.modularrevisitor.algebra.impl.operation.AdmodularModularrevisitorIntegerCalculationExpressionOperationImpl(integerCalculationExpression, this);
	} 
	@Override
	default admodular.modularrevisitor.algebra.operation.AdmodularModularrevisitorIntegerCalculationExpressionOperation integerExpression_integerCalculationExpression(final admodular.IntegerCalculationExpression integerCalculationExpression) {
		return new admodular.modularrevisitor.algebra.impl.operation.AdmodularModularrevisitorIntegerCalculationExpressionOperationImpl(integerCalculationExpression, this);
	} 
	@Override
	default admodular.modularrevisitor.algebra.operation.AdmodularModularrevisitorIntegerCalculationExpressionOperation expression_integerCalculationExpression(final admodular.IntegerCalculationExpression integerCalculationExpression) {
		return new admodular.modularrevisitor.algebra.impl.operation.AdmodularModularrevisitorIntegerCalculationExpressionOperationImpl(integerCalculationExpression, this);
	} 
	@Override
	default modularrevisitor.modularrevisitor.algebra.operation.ModularrevisitorModularrevisitorIntegerCalculationExpression_AspectOperation integerCalculationExpression_Aspect(final modularrevisitor.IntegerCalculationExpression_Aspect integerCalculationExpression_Aspect) {
		return new modularrevisitor.modularrevisitor.algebra.impl.operation.ModularrevisitorModularrevisitorIntegerCalculationExpression_AspectOperationImpl(integerCalculationExpression_Aspect, this);
	} 
	@Override
	default modularrevisitor.modularrevisitor.algebra.operation.ModularrevisitorModularrevisitorIntegerCalculationExpression_AspectOperation integerExpression_Aspect_integerCalculationExpression_Aspect(final modularrevisitor.IntegerCalculationExpression_Aspect integerCalculationExpression_Aspect) {
		return new modularrevisitor.modularrevisitor.algebra.impl.operation.ModularrevisitorModularrevisitorIntegerCalculationExpression_AspectOperationImpl(integerCalculationExpression_Aspect, this);
	} 
	@Override
	default modularrevisitor.modularrevisitor.algebra.operation.ModularrevisitorModularrevisitorIntegerCalculationExpression_AspectOperation integerCalculationExpression_integerCalculationExpression_Aspect(final modularrevisitor.IntegerCalculationExpression_Aspect integerCalculationExpression_Aspect) {
		return new modularrevisitor.modularrevisitor.algebra.impl.operation.ModularrevisitorModularrevisitorIntegerCalculationExpression_AspectOperationImpl(integerCalculationExpression_Aspect, this);
	} 
	@Override
	default modularrevisitor.modularrevisitor.algebra.operation.ModularrevisitorModularrevisitorIntegerCalculationExpression_AspectOperation integerExpression_integerCalculationExpression_Aspect(final modularrevisitor.IntegerCalculationExpression_Aspect integerCalculationExpression_Aspect) {
		return new modularrevisitor.modularrevisitor.algebra.impl.operation.ModularrevisitorModularrevisitorIntegerCalculationExpression_AspectOperationImpl(integerCalculationExpression_Aspect, this);
	} 
	@Override
	default modularrevisitor.modularrevisitor.algebra.operation.ModularrevisitorModularrevisitorIntegerCalculationExpression_AspectOperation expression_integerCalculationExpression_Aspect(final modularrevisitor.IntegerCalculationExpression_Aspect integerCalculationExpression_Aspect) {
		return new modularrevisitor.modularrevisitor.algebra.impl.operation.ModularrevisitorModularrevisitorIntegerCalculationExpression_AspectOperationImpl(integerCalculationExpression_Aspect, this);
	} 
	@Override
	default admodular.modularrevisitor.algebra.operation.AdmodularModularrevisitorIntegerComparisonExpressionOperation integerComparisonExpression(final admodular.IntegerComparisonExpression integerComparisonExpression) {
		return new admodular.modularrevisitor.algebra.impl.operation.AdmodularModularrevisitorIntegerComparisonExpressionOperationImpl(integerComparisonExpression, this);
	} 
	@Override
	default admodular.modularrevisitor.algebra.operation.AdmodularModularrevisitorIntegerComparisonExpressionOperation integerExpression_integerComparisonExpression(final admodular.IntegerComparisonExpression integerComparisonExpression) {
		return new admodular.modularrevisitor.algebra.impl.operation.AdmodularModularrevisitorIntegerComparisonExpressionOperationImpl(integerComparisonExpression, this);
	} 
	@Override
	default admodular.modularrevisitor.algebra.operation.AdmodularModularrevisitorIntegerComparisonExpressionOperation expression_integerComparisonExpression(final admodular.IntegerComparisonExpression integerComparisonExpression) {
		return new admodular.modularrevisitor.algebra.impl.operation.AdmodularModularrevisitorIntegerComparisonExpressionOperationImpl(integerComparisonExpression, this);
	} 
	@Override
	default modularrevisitor.modularrevisitor.algebra.operation.ModularrevisitorModularrevisitorIntegerComparisonExpression_AspectOperation integerComparisonExpression_Aspect(final modularrevisitor.IntegerComparisonExpression_Aspect integerComparisonExpression_Aspect) {
		return new modularrevisitor.modularrevisitor.algebra.impl.operation.ModularrevisitorModularrevisitorIntegerComparisonExpression_AspectOperationImpl(integerComparisonExpression_Aspect, this);
	} 
	@Override
	default modularrevisitor.modularrevisitor.algebra.operation.ModularrevisitorModularrevisitorIntegerComparisonExpression_AspectOperation integerExpression_Aspect_integerComparisonExpression_Aspect(final modularrevisitor.IntegerComparisonExpression_Aspect integerComparisonExpression_Aspect) {
		return new modularrevisitor.modularrevisitor.algebra.impl.operation.ModularrevisitorModularrevisitorIntegerComparisonExpression_AspectOperationImpl(integerComparisonExpression_Aspect, this);
	} 
	@Override
	default modularrevisitor.modularrevisitor.algebra.operation.ModularrevisitorModularrevisitorIntegerComparisonExpression_AspectOperation integerComparisonExpression_integerComparisonExpression_Aspect(final modularrevisitor.IntegerComparisonExpression_Aspect integerComparisonExpression_Aspect) {
		return new modularrevisitor.modularrevisitor.algebra.impl.operation.ModularrevisitorModularrevisitorIntegerComparisonExpression_AspectOperationImpl(integerComparisonExpression_Aspect, this);
	} 
	@Override
	default modularrevisitor.modularrevisitor.algebra.operation.ModularrevisitorModularrevisitorIntegerComparisonExpression_AspectOperation integerExpression_integerComparisonExpression_Aspect(final modularrevisitor.IntegerComparisonExpression_Aspect integerComparisonExpression_Aspect) {
		return new modularrevisitor.modularrevisitor.algebra.impl.operation.ModularrevisitorModularrevisitorIntegerComparisonExpression_AspectOperationImpl(integerComparisonExpression_Aspect, this);
	} 
	@Override
	default modularrevisitor.modularrevisitor.algebra.operation.ModularrevisitorModularrevisitorIntegerComparisonExpression_AspectOperation expression_integerComparisonExpression_Aspect(final modularrevisitor.IntegerComparisonExpression_Aspect integerComparisonExpression_Aspect) {
		return new modularrevisitor.modularrevisitor.algebra.impl.operation.ModularrevisitorModularrevisitorIntegerComparisonExpression_AspectOperationImpl(integerComparisonExpression_Aspect, this);
	} 
	@Override
	default modularrevisitor.modularrevisitor.algebra.operation.ModularrevisitorModularrevisitorIntegerExpression_AspectOperation integerExpression_Aspect(final modularrevisitor.IntegerExpression_Aspect integerExpression_Aspect) {
		return new modularrevisitor.modularrevisitor.algebra.impl.operation.ModularrevisitorModularrevisitorIntegerExpression_AspectOperationImpl(integerExpression_Aspect, this);
	} 
	@Override
	default modularrevisitor.modularrevisitor.algebra.operation.ModularrevisitorModularrevisitorIntegerExpression_AspectOperation integerExpression_integerExpression_Aspect(final modularrevisitor.IntegerExpression_Aspect integerExpression_Aspect) {
		return new modularrevisitor.modularrevisitor.algebra.impl.operation.ModularrevisitorModularrevisitorIntegerExpression_AspectOperationImpl(integerExpression_Aspect, this);
	} 
	@Override
	default modularrevisitor.modularrevisitor.algebra.operation.ModularrevisitorModularrevisitorIntegerExpression_AspectOperation expression_integerExpression_Aspect(final modularrevisitor.IntegerExpression_Aspect integerExpression_Aspect) {
		return new modularrevisitor.modularrevisitor.algebra.impl.operation.ModularrevisitorModularrevisitorIntegerExpression_AspectOperationImpl(integerExpression_Aspect, this);
	} 
	@Override
	default admodular.modularrevisitor.algebra.operation.AdmodularModularrevisitorIntegerValueOperation integerValue(final admodular.IntegerValue integerValue) {
		return new admodular.modularrevisitor.algebra.impl.operation.AdmodularModularrevisitorIntegerValueOperationImpl(integerValue, this);
	} 
	@Override
	default admodular.modularrevisitor.algebra.operation.AdmodularModularrevisitorIntegerValueOperation value_integerValue(final admodular.IntegerValue integerValue) {
		return new admodular.modularrevisitor.algebra.impl.operation.AdmodularModularrevisitorIntegerValueOperationImpl(integerValue, this);
	} 
	@Override
	default modularrevisitor.modularrevisitor.algebra.operation.ModularrevisitorModularrevisitorIntegerValue_AspectOperation integerValue_Aspect(final modularrevisitor.IntegerValue_Aspect integerValue_Aspect) {
		return new modularrevisitor.modularrevisitor.algebra.impl.operation.ModularrevisitorModularrevisitorIntegerValue_AspectOperationImpl(integerValue_Aspect, this);
	} 
	@Override
	default modularrevisitor.modularrevisitor.algebra.operation.ModularrevisitorModularrevisitorIntegerValue_AspectOperation integerValue_integerValue_Aspect(final modularrevisitor.IntegerValue_Aspect integerValue_Aspect) {
		return new modularrevisitor.modularrevisitor.algebra.impl.operation.ModularrevisitorModularrevisitorIntegerValue_AspectOperationImpl(integerValue_Aspect, this);
	} 
	@Override
	default modularrevisitor.modularrevisitor.algebra.operation.ModularrevisitorModularrevisitorIntegerValue_AspectOperation value_integerValue_Aspect(final modularrevisitor.IntegerValue_Aspect integerValue_Aspect) {
		return new modularrevisitor.modularrevisitor.algebra.impl.operation.ModularrevisitorModularrevisitorIntegerValue_AspectOperationImpl(integerValue_Aspect, this);
	} 
	@Override
	default admodular.modularrevisitor.algebra.operation.AdmodularModularrevisitorIntegerVariableOperation integerVariable(final admodular.IntegerVariable integerVariable) {
		return new admodular.modularrevisitor.algebra.impl.operation.AdmodularModularrevisitorIntegerVariableOperationImpl(integerVariable, this);
	} 
	@Override
	default admodular.modularrevisitor.algebra.operation.AdmodularModularrevisitorIntegerVariableOperation variable_integerVariable(final admodular.IntegerVariable integerVariable) {
		return new admodular.modularrevisitor.algebra.impl.operation.AdmodularModularrevisitorIntegerVariableOperationImpl(integerVariable, this);
	} 
	@Override
	default modularrevisitor.modularrevisitor.algebra.operation.ModularrevisitorModularrevisitorIntegerVariable_AspectOperation integerVariable_Aspect(final modularrevisitor.IntegerVariable_Aspect integerVariable_Aspect) {
		return new modularrevisitor.modularrevisitor.algebra.impl.operation.ModularrevisitorModularrevisitorIntegerVariable_AspectOperationImpl(integerVariable_Aspect, this);
	} 
	@Override
	default modularrevisitor.modularrevisitor.algebra.operation.ModularrevisitorModularrevisitorIntegerVariable_AspectOperation variable_integerVariable_Aspect(final modularrevisitor.IntegerVariable_Aspect integerVariable_Aspect) {
		return new modularrevisitor.modularrevisitor.algebra.impl.operation.ModularrevisitorModularrevisitorIntegerVariable_AspectOperationImpl(integerVariable_Aspect, this);
	} 
	@Override
	default modularrevisitor.modularrevisitor.algebra.operation.ModularrevisitorModularrevisitorIntegerVariable_AspectOperation variable_Aspect_integerVariable_Aspect(final modularrevisitor.IntegerVariable_Aspect integerVariable_Aspect) {
		return new modularrevisitor.modularrevisitor.algebra.impl.operation.ModularrevisitorModularrevisitorIntegerVariable_AspectOperationImpl(integerVariable_Aspect, this);
	} 
	@Override
	default modularrevisitor.modularrevisitor.algebra.operation.ModularrevisitorModularrevisitorIntegerVariable_AspectOperation integerVariable_integerVariable_Aspect(final modularrevisitor.IntegerVariable_Aspect integerVariable_Aspect) {
		return new modularrevisitor.modularrevisitor.algebra.impl.operation.ModularrevisitorModularrevisitorIntegerVariable_AspectOperationImpl(integerVariable_Aspect, this);
	} 
	@Override
	default admodular.modularrevisitor.algebra.operation.AdmodularModularrevisitorJoinNodeOperation joinNode(final admodular.JoinNode joinNode) {
		return new admodular.modularrevisitor.algebra.impl.operation.AdmodularModularrevisitorJoinNodeOperationImpl(joinNode, this);
	} 
	@Override
	default admodular.modularrevisitor.algebra.operation.AdmodularModularrevisitorJoinNodeOperation activityNode_joinNode(final admodular.JoinNode joinNode) {
		return new admodular.modularrevisitor.algebra.impl.operation.AdmodularModularrevisitorJoinNodeOperationImpl(joinNode, this);
	} 
	@Override
	default admodular.modularrevisitor.algebra.operation.AdmodularModularrevisitorJoinNodeOperation namedElement_joinNode(final admodular.JoinNode joinNode) {
		return new admodular.modularrevisitor.algebra.impl.operation.AdmodularModularrevisitorJoinNodeOperationImpl(joinNode, this);
	} 
	@Override
	default admodular.modularrevisitor.algebra.operation.AdmodularModularrevisitorJoinNodeOperation controlNode_joinNode(final admodular.JoinNode joinNode) {
		return new admodular.modularrevisitor.algebra.impl.operation.AdmodularModularrevisitorJoinNodeOperationImpl(joinNode, this);
	} 
	@Override
	default modularrevisitor.modularrevisitor.algebra.operation.ModularrevisitorModularrevisitorJoinNode_AspectOperation joinNode_Aspect(final modularrevisitor.JoinNode_Aspect joinNode_Aspect) {
		return new modularrevisitor.modularrevisitor.algebra.impl.operation.ModularrevisitorModularrevisitorJoinNode_AspectOperationImpl(joinNode_Aspect, this);
	} 
	@Override
	default modularrevisitor.modularrevisitor.algebra.operation.ModularrevisitorModularrevisitorJoinNode_AspectOperation joinNode_joinNode_Aspect(final modularrevisitor.JoinNode_Aspect joinNode_Aspect) {
		return new modularrevisitor.modularrevisitor.algebra.impl.operation.ModularrevisitorModularrevisitorJoinNode_AspectOperationImpl(joinNode_Aspect, this);
	} 
	@Override
	default modularrevisitor.modularrevisitor.algebra.operation.ModularrevisitorModularrevisitorJoinNode_AspectOperation namedElement_joinNode_Aspect(final modularrevisitor.JoinNode_Aspect joinNode_Aspect) {
		return new modularrevisitor.modularrevisitor.algebra.impl.operation.ModularrevisitorModularrevisitorJoinNode_AspectOperationImpl(joinNode_Aspect, this);
	} 
	@Override
	default modularrevisitor.modularrevisitor.algebra.operation.ModularrevisitorModularrevisitorJoinNode_AspectOperation activityNode_Aspect_joinNode_Aspect(final modularrevisitor.JoinNode_Aspect joinNode_Aspect) {
		return new modularrevisitor.modularrevisitor.algebra.impl.operation.ModularrevisitorModularrevisitorJoinNode_AspectOperationImpl(joinNode_Aspect, this);
	} 
	@Override
	default modularrevisitor.modularrevisitor.algebra.operation.ModularrevisitorModularrevisitorJoinNode_AspectOperation activityNode_joinNode_Aspect(final modularrevisitor.JoinNode_Aspect joinNode_Aspect) {
		return new modularrevisitor.modularrevisitor.algebra.impl.operation.ModularrevisitorModularrevisitorJoinNode_AspectOperationImpl(joinNode_Aspect, this);
	} 
	@Override
	default modularrevisitor.modularrevisitor.algebra.operation.ModularrevisitorModularrevisitorJoinNode_AspectOperation controlNode_Aspect_joinNode_Aspect(final modularrevisitor.JoinNode_Aspect joinNode_Aspect) {
		return new modularrevisitor.modularrevisitor.algebra.impl.operation.ModularrevisitorModularrevisitorJoinNode_AspectOperationImpl(joinNode_Aspect, this);
	} 
	@Override
	default modularrevisitor.modularrevisitor.algebra.operation.ModularrevisitorModularrevisitorJoinNode_AspectOperation controlNode_joinNode_Aspect(final modularrevisitor.JoinNode_Aspect joinNode_Aspect) {
		return new modularrevisitor.modularrevisitor.algebra.impl.operation.ModularrevisitorModularrevisitorJoinNode_AspectOperationImpl(joinNode_Aspect, this);
	} 
	@Override
	default admodular.modularrevisitor.algebra.operation.AdmodularModularrevisitorMergeNodeOperation mergeNode(final admodular.MergeNode mergeNode) {
		return new admodular.modularrevisitor.algebra.impl.operation.AdmodularModularrevisitorMergeNodeOperationImpl(mergeNode, this);
	} 
	@Override
	default admodular.modularrevisitor.algebra.operation.AdmodularModularrevisitorMergeNodeOperation activityNode_mergeNode(final admodular.MergeNode mergeNode) {
		return new admodular.modularrevisitor.algebra.impl.operation.AdmodularModularrevisitorMergeNodeOperationImpl(mergeNode, this);
	} 
	@Override
	default admodular.modularrevisitor.algebra.operation.AdmodularModularrevisitorMergeNodeOperation namedElement_mergeNode(final admodular.MergeNode mergeNode) {
		return new admodular.modularrevisitor.algebra.impl.operation.AdmodularModularrevisitorMergeNodeOperationImpl(mergeNode, this);
	} 
	@Override
	default admodular.modularrevisitor.algebra.operation.AdmodularModularrevisitorMergeNodeOperation controlNode_mergeNode(final admodular.MergeNode mergeNode) {
		return new admodular.modularrevisitor.algebra.impl.operation.AdmodularModularrevisitorMergeNodeOperationImpl(mergeNode, this);
	} 
	@Override
	default modularrevisitor.modularrevisitor.algebra.operation.ModularrevisitorModularrevisitorMergeNode_AspectOperation mergeNode_Aspect(final modularrevisitor.MergeNode_Aspect mergeNode_Aspect) {
		return new modularrevisitor.modularrevisitor.algebra.impl.operation.ModularrevisitorModularrevisitorMergeNode_AspectOperationImpl(mergeNode_Aspect, this);
	} 
	@Override
	default modularrevisitor.modularrevisitor.algebra.operation.ModularrevisitorModularrevisitorMergeNode_AspectOperation namedElement_mergeNode_Aspect(final modularrevisitor.MergeNode_Aspect mergeNode_Aspect) {
		return new modularrevisitor.modularrevisitor.algebra.impl.operation.ModularrevisitorModularrevisitorMergeNode_AspectOperationImpl(mergeNode_Aspect, this);
	} 
	@Override
	default modularrevisitor.modularrevisitor.algebra.operation.ModularrevisitorModularrevisitorMergeNode_AspectOperation activityNode_Aspect_mergeNode_Aspect(final modularrevisitor.MergeNode_Aspect mergeNode_Aspect) {
		return new modularrevisitor.modularrevisitor.algebra.impl.operation.ModularrevisitorModularrevisitorMergeNode_AspectOperationImpl(mergeNode_Aspect, this);
	} 
	@Override
	default modularrevisitor.modularrevisitor.algebra.operation.ModularrevisitorModularrevisitorMergeNode_AspectOperation activityNode_mergeNode_Aspect(final modularrevisitor.MergeNode_Aspect mergeNode_Aspect) {
		return new modularrevisitor.modularrevisitor.algebra.impl.operation.ModularrevisitorModularrevisitorMergeNode_AspectOperationImpl(mergeNode_Aspect, this);
	} 
	@Override
	default modularrevisitor.modularrevisitor.algebra.operation.ModularrevisitorModularrevisitorMergeNode_AspectOperation controlNode_Aspect_mergeNode_Aspect(final modularrevisitor.MergeNode_Aspect mergeNode_Aspect) {
		return new modularrevisitor.modularrevisitor.algebra.impl.operation.ModularrevisitorModularrevisitorMergeNode_AspectOperationImpl(mergeNode_Aspect, this);
	} 
	@Override
	default modularrevisitor.modularrevisitor.algebra.operation.ModularrevisitorModularrevisitorMergeNode_AspectOperation mergeNode_mergeNode_Aspect(final modularrevisitor.MergeNode_Aspect mergeNode_Aspect) {
		return new modularrevisitor.modularrevisitor.algebra.impl.operation.ModularrevisitorModularrevisitorMergeNode_AspectOperationImpl(mergeNode_Aspect, this);
	} 
	@Override
	default modularrevisitor.modularrevisitor.algebra.operation.ModularrevisitorModularrevisitorMergeNode_AspectOperation controlNode_mergeNode_Aspect(final modularrevisitor.MergeNode_Aspect mergeNode_Aspect) {
		return new modularrevisitor.modularrevisitor.algebra.impl.operation.ModularrevisitorModularrevisitorMergeNode_AspectOperationImpl(mergeNode_Aspect, this);
	} 
	@Override
	default modularrevisitor.modularrevisitor.algebra.operation.ModularrevisitorModularrevisitorOfferOperation offer(final modularrevisitor.Offer offer) {
		return new modularrevisitor.modularrevisitor.algebra.impl.operation.ModularrevisitorModularrevisitorOfferOperationImpl(offer, this);
	} 
	@Override
	default admodular.modularrevisitor.algebra.operation.AdmodularModularrevisitorOpaqueActionOperation opaqueAction(final admodular.OpaqueAction opaqueAction) {
		return new admodular.modularrevisitor.algebra.impl.operation.AdmodularModularrevisitorOpaqueActionOperationImpl(opaqueAction, this);
	} 
	@Override
	default admodular.modularrevisitor.algebra.operation.AdmodularModularrevisitorOpaqueActionOperation namedElement_opaqueAction(final admodular.OpaqueAction opaqueAction) {
		return new admodular.modularrevisitor.algebra.impl.operation.AdmodularModularrevisitorOpaqueActionOperationImpl(opaqueAction, this);
	} 
	@Override
	default admodular.modularrevisitor.algebra.operation.AdmodularModularrevisitorOpaqueActionOperation action_opaqueAction(final admodular.OpaqueAction opaqueAction) {
		return new admodular.modularrevisitor.algebra.impl.operation.AdmodularModularrevisitorOpaqueActionOperationImpl(opaqueAction, this);
	} 
	@Override
	default admodular.modularrevisitor.algebra.operation.AdmodularModularrevisitorOpaqueActionOperation activityNode_opaqueAction(final admodular.OpaqueAction opaqueAction) {
		return new admodular.modularrevisitor.algebra.impl.operation.AdmodularModularrevisitorOpaqueActionOperationImpl(opaqueAction, this);
	} 
	@Override
	default admodular.modularrevisitor.algebra.operation.AdmodularModularrevisitorOpaqueActionOperation executableNode_opaqueAction(final admodular.OpaqueAction opaqueAction) {
		return new admodular.modularrevisitor.algebra.impl.operation.AdmodularModularrevisitorOpaqueActionOperationImpl(opaqueAction, this);
	} 
	@Override
	default modularrevisitor.modularrevisitor.algebra.operation.ModularrevisitorModularrevisitorOpaqueAction_AspectOperation opaqueAction_Aspect(final modularrevisitor.OpaqueAction_Aspect opaqueAction_Aspect) {
		return new modularrevisitor.modularrevisitor.algebra.impl.operation.ModularrevisitorModularrevisitorOpaqueAction_AspectOperationImpl(opaqueAction_Aspect, this);
	} 
	@Override
	default modularrevisitor.modularrevisitor.algebra.operation.ModularrevisitorModularrevisitorOpaqueAction_AspectOperation namedElement_opaqueAction_Aspect(final modularrevisitor.OpaqueAction_Aspect opaqueAction_Aspect) {
		return new modularrevisitor.modularrevisitor.algebra.impl.operation.ModularrevisitorModularrevisitorOpaqueAction_AspectOperationImpl(opaqueAction_Aspect, this);
	} 
	@Override
	default modularrevisitor.modularrevisitor.algebra.operation.ModularrevisitorModularrevisitorOpaqueAction_AspectOperation action_Aspect_opaqueAction_Aspect(final modularrevisitor.OpaqueAction_Aspect opaqueAction_Aspect) {
		return new modularrevisitor.modularrevisitor.algebra.impl.operation.ModularrevisitorModularrevisitorOpaqueAction_AspectOperationImpl(opaqueAction_Aspect, this);
	} 
	@Override
	default modularrevisitor.modularrevisitor.algebra.operation.ModularrevisitorModularrevisitorOpaqueAction_AspectOperation activityNode_Aspect_opaqueAction_Aspect(final modularrevisitor.OpaqueAction_Aspect opaqueAction_Aspect) {
		return new modularrevisitor.modularrevisitor.algebra.impl.operation.ModularrevisitorModularrevisitorOpaqueAction_AspectOperationImpl(opaqueAction_Aspect, this);
	} 
	@Override
	default modularrevisitor.modularrevisitor.algebra.operation.ModularrevisitorModularrevisitorOpaqueAction_AspectOperation action_opaqueAction_Aspect(final modularrevisitor.OpaqueAction_Aspect opaqueAction_Aspect) {
		return new modularrevisitor.modularrevisitor.algebra.impl.operation.ModularrevisitorModularrevisitorOpaqueAction_AspectOperationImpl(opaqueAction_Aspect, this);
	} 
	@Override
	default modularrevisitor.modularrevisitor.algebra.operation.ModularrevisitorModularrevisitorOpaqueAction_AspectOperation activityNode_opaqueAction_Aspect(final modularrevisitor.OpaqueAction_Aspect opaqueAction_Aspect) {
		return new modularrevisitor.modularrevisitor.algebra.impl.operation.ModularrevisitorModularrevisitorOpaqueAction_AspectOperationImpl(opaqueAction_Aspect, this);
	} 
	@Override
	default modularrevisitor.modularrevisitor.algebra.operation.ModularrevisitorModularrevisitorOpaqueAction_AspectOperation opaqueAction_opaqueAction_Aspect(final modularrevisitor.OpaqueAction_Aspect opaqueAction_Aspect) {
		return new modularrevisitor.modularrevisitor.algebra.impl.operation.ModularrevisitorModularrevisitorOpaqueAction_AspectOperationImpl(opaqueAction_Aspect, this);
	} 
	@Override
	default modularrevisitor.modularrevisitor.algebra.operation.ModularrevisitorModularrevisitorOpaqueAction_AspectOperation executableNode_Aspect_opaqueAction_Aspect(final modularrevisitor.OpaqueAction_Aspect opaqueAction_Aspect) {
		return new modularrevisitor.modularrevisitor.algebra.impl.operation.ModularrevisitorModularrevisitorOpaqueAction_AspectOperationImpl(opaqueAction_Aspect, this);
	} 
	@Override
	default modularrevisitor.modularrevisitor.algebra.operation.ModularrevisitorModularrevisitorOpaqueAction_AspectOperation executableNode_opaqueAction_Aspect(final modularrevisitor.OpaqueAction_Aspect opaqueAction_Aspect) {
		return new modularrevisitor.modularrevisitor.algebra.impl.operation.ModularrevisitorModularrevisitorOpaqueAction_AspectOperationImpl(opaqueAction_Aspect, this);
	} 
	@Override
	default modularrevisitor.modularrevisitor.algebra.operation.ModularrevisitorModularrevisitorTokenOperation token(final modularrevisitor.Token token) {
		return new modularrevisitor.modularrevisitor.algebra.impl.operation.ModularrevisitorModularrevisitorTokenOperationImpl(token, this);
	} 
	@Override
	default modularrevisitor.modularrevisitor.algebra.operation.ModularrevisitorModularrevisitorTraceOperation trace(final modularrevisitor.Trace trace) {
		return new modularrevisitor.modularrevisitor.algebra.impl.operation.ModularrevisitorModularrevisitorTraceOperationImpl(trace, this);
	} 
	@Override
	default modularrevisitor.modularrevisitor.algebra.operation.ModularrevisitorModularrevisitorVariable_AspectOperation variable_Aspect(final modularrevisitor.Variable_Aspect variable_Aspect) {
		return new modularrevisitor.modularrevisitor.algebra.impl.operation.ModularrevisitorModularrevisitorVariable_AspectOperationImpl(variable_Aspect, this);
	} 
	@Override
	default modularrevisitor.modularrevisitor.algebra.operation.ModularrevisitorModularrevisitorVariable_AspectOperation variable_variable_Aspect(final modularrevisitor.Variable_Aspect variable_Aspect) {
		return new modularrevisitor.modularrevisitor.algebra.impl.operation.ModularrevisitorModularrevisitorVariable_AspectOperationImpl(variable_Aspect, this);
	} 
}
